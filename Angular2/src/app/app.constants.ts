import { Injectable } from "@angular/core";

@Injectable()
export class Configuration {
    public loginUrl: string = "authenticateUser/";
    public createSignUpUrl: string = "signUpOpsDevs/";
    public getAllMicroservices: string = "getAllMicroservices";
    public getMicroService: string = "getMicroService";
    public getMicroServiceOnboardStatus: string = "getMicroServiceOnboardStatus";
    public getAllMobileApps: string = "getAllMobileApps";
    public getMobileApps: string = "getMobileApps";
    public getAllMSSubscriptions: string = "getAllMSSubscriptions";
    public microServiceDeveloper: string = "MicroServiceDeveloper";
    public mobileAppsDeveloper: string = "MobileAppsDeveloper";
    public viewErrorsLinkMS: string = "microservice/onboard/viewError";
    public approveLinkMS: string = "getMicroService/approve";
    public viewErrorsLinkMA: string = "application/onboard/viewError";
    public approveLinkMA: string = "getMobileApps/approve";
    public telcoDeveloper: string = "TelcoDeveloper";
    public newCoDeveloper: string = "NewCoDeveloper";
    public ItemDifference: number = 10; // It should always be greater than MinItemFirstLoad value
    public MaxItemsInDrop: number = 50;
    public MinItemFirstLoad: number = 12;
    public Limit: string = "0";
    public Offset: string = "0";
    public similarAppLimit: string = "10";
    public similarAppOffset: string = "0";
    public twoDivLimit: string = "5";
    public twoDivOffset: string = "0";
    public msOnboardValidateCredits: string = "microservice/onboard/validateCredits/";
    public msOnboardValidateName: string = "microservice/onboard/validateName/";
    public msOnboardSubmit: string = "onboard/microservices/";
	  public mobileOnboardSubmit: string = "onboard/applications/";
    public appOnboardValidateCredits: string = "application/onboard/validateCredits/";
    public appOnboardValidateName: string = "application/onboard/validateName/";
    public appOnboardSubmit: string = "application/onboard/submit/";
    //  public billingDetailURL:string = "appDeveloperDetailedBill/";
    // public earningDetailURL:string = "msDeveloperDetailedBill/";
    // public billingDetailURL:string = "appDeveloperDetailedBill/";
    // public earningDetailURL:string = "msDeveloperDetailedBill/";
    public billingURL: string = "billing/";
    public validateCredits: string = "validateCredits/";
    public edgeFetchingURL: string = "getAllEdges";
    public edgeDetailURL: string = "edge/details/";
    public cloudletFetchingURL: string = "getAllCloudlets/";
    public cloudletImageURL: string = "getAllCloudletImage/";
    public appGraphURL: string = "getAppUsage/";
    public msGraphURL: string = "getMSUsage/";
    public paasUsageURL: string = "getPaasUsage/";
    public telcoUsageURL: string = "getTelcoUsage/";
    public events: string = "event";
    public empty: string = "empty";
    public countAPI: number = 1;
    public api: string = "http";
    public network : string = "network";
    public USER_PROFILE_URL: string = "userprofile/getUserDetails";
	  public SAVE_USER_URL: string= "userprofile/SaveuserDetails";
    public ADD_CREDITS_URL: string= "userprofile/addOrDeleteCredits";
    public USER_PROFILE_SEARCH: string = "search";
    public sortBy = "sort_by";
    public sortOrder = "sort_order";
    public pageNumber = "page_number";
    public pageSize = "page_size";
    public edgeOperatorListURL: string = "edges"; // TBD
    public cloudletOperatorUrl: string = ""; // TBD
    public edgeTelcoListURL: string = "edges/onboard";
    public cloudletDetailsUrl = "cloudlets/details/"; // TBD
    public cloudletImageDetailsUrl = "cloudletImage/details/"; // TBD
    public edgeOnBoardURL = "/onboard/edge";
    public cloudletImageUploadUrl = "cloudletsImage/save";
    public cloudletImageValidateUrl = "cloudletImage/onboard/validateName";
    public cloudletTestConnectionUrl = "cloudlets/test/";
    public edgeListforOperatorUrl = "cloudlets/onboard/";
    public validateCloudletnameUrl = "cloudlets/onboard/validateName";
    public submitCloudletUrl = "submit/cloudlets/";
    public validateEdgenameUrl = "edges/onboard/validateName";
    public mobileAppDashboardURL: string = "getAppUsage/";
    public newCoDashboardURL: string = "getCloudletUsage/";
    public mobileAppCPUURL: string = "cpuusage/";
    public mobileAppLatencyURL: string = "latency/";
    public msSessionURL: string = "session/";
    public topMicroServicesURL: string = "getTopMicroservices/";
    public mobileAppUsersURL: string = "totalusers/";
    public subscriptionURL: string = "totalsubscription/";
    public topAppURL: string = "getTopApplication/";
    public msUsage: string = "usage/";
    public memoryUsage: string = "memoryUsage";
    public storageUsage: string = "storageUsage";
    public topCloudlets: string = "getTopcloudlets/";
    public vmiURL: string = "getVMIPayLoad";
    public requiredString: string = "Name is required(Must begin with an alphabet with dashes (-) and alphanumerics in between and end with an alphanumeric character).";
	  public requiredUserString: string = "UserName is invalid(Must begin with an alphabet with dashes (-) and alphanumerics in between and end with an alphanumeric character).";
    public mandatoryMsg: string = "Please fill all the mandatory fields marked with (*)";
    public downloadSDKUrl: string = "download/";
    public timeoutMsg:string = "You have been logged out. Please login to continue.";
    public emptyString : string = "No records found";
    public invalidAccess : string = "Invalid access. Please login again.";
    public timeoutURL : string = "timeout";
	  public FEEDBACK_FETCH_URL: string = "platformFeedback/save";
    public listSDK : string = "listSDK";
    public downloadSDK : string = "downloadSDK/";
    public uploadSDK : string = "uploadSDK/";
    public deleteSDK : string = "deleteSDK/";
    public getFeedback : string = "platformFeedback/fetch";
    public downloadFeedback : string = "downloadFeedbackFile/";
    public languages : string[] = ["Java","Python","Android"];
    public category : string[] = ["suggestion","query","problem","others"];
    public msRatingUrl : string = "microService/rating";
    public imageFormats : string[] = ["jpg","png","jpeg","tiff"];
    public fileFormats : string[] = ["doc","docx","txt","pdf"];
    public feedbackFormats : string[] = ['jpg', 'jpeg', 'pdf', 'txt', 'doc', 'docx', 'png'];
    public sdkFormats : string[] = ['zip','gzip','tar','tar.gz','7z','rar'];
    public cloudletFiles : string[] = ['yaml'];
    public MSSandboxing : string = "microservice/sandbox/";
    public AppSandboxing : string = "application/sandbox/";
    public getRatingReviews: string ="microService/rating/getRatingReviews";
    public getCountOfRecords: string = "microService/rating/getCountOfRecords";
    public topReviews: string = "microService/rating/getTopReviews";
}
